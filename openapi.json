{
  "openapi": "3.0.0",
  "info": {
    "title": "Chirpstack Production VPS API",
    "description": "API for managing Chirpstack resources in a production environment",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "{host}:8000",
      "variables": {
        "host": {
          "default": "localhost",
          "description": "API host"
        }
      }
    }
  ],
  "paths": {
    "/api/v1/token/": {
      "post": {
        "summary": "Authenticate and get token",
        "description": "Obtain an authentication token for API access",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "username"
                  },
                  "password": {
                    "type": "string",
                    "example": "password*"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tenants/": {
      "get": {
        "summary": "Get all tenants",
        "description": "Retrieve a list of all tenants",
        "tags": ["Tenants"],
        "security": [{"ApiToken": []}],
        "responses": {
          "200": {
            "description": "List of tenants retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tenant"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create tenant",
        "description": "Create a new tenant",
        "tags": ["Tenants"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tenant created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tenants/{tenantId}": {
      "parameters": [
        {
          "name": "tenantId",
          "in": "path",
          "required": true,
          "description": "ID of the tenant",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update tenant",
        "description": "Update an existing tenant",
        "tags": ["Tenants"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tenant updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete tenant",
        "description": "Delete an existing tenant",
        "tags": ["Tenants"],
        "security": [{"ApiToken": []}],
        "responses": {
          "204": {
            "description": "Tenant deleted successfully"
          }
        }
      }
    },
    "/api/v1/Users/": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve a list of all users",
        "tags": ["Users"],
        "security": [{"ApiToken": []}],
        "responses": {
          "200": {
            "description": "List of users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create user",
        "description": "Create a new user",
        "tags": ["Users"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Users/{userId}/": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of the user",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update user",
        "description": "Update an existing user",
        "tags": ["Users"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete an existing user",
        "tags": ["Users"],
        "security": [{"ApiToken": []}],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          }
        }
      }
    },
    "/api/v1/chirpstack/applications/": {
      "get": {
        "summary": "Get applications",
        "description": "Retrieve a list of all applications",
        "tags": ["Applications"],
        "security": [{"ApiToken": []}],
        "responses": {
          "200": {
            "description": "List of applications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create application",
        "description": "Create a new application",
        "tags": ["Applications"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Application created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chirpstack/applications/{applicationId}/": {
      "parameters": [
        {
          "name": "applicationId",
          "in": "path",
          "required": true,
          "description": "ID of the application",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update application",
        "description": "Update an existing application",
        "tags": ["Applications"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete application",
        "description": "Delete an existing application",
        "tags": ["Applications"],
        "security": [{"ApiToken": []}],
        "responses": {
          "204": {
            "description": "Application deleted successfully"
          }
        }
      }
    },
    "/api/v1/chirpstack/gateways/": {
      "get": {
        "summary": "Get gateways",
        "description": "Retrieve a list of all gateways",
        "tags": ["Gateways"],
        "security": [{"ApiToken": []}],
        "responses": {
          "200": {
            "description": "List of gateways retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gateway"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create gateway",
        "description": "Create a new gateway",
        "tags": ["Gateways"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatewayRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Gateway created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gateway"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chirpstack/gateways/{gatewayId}/": {
      "parameters": [
        {
          "name": "gatewayId",
          "in": "path",
          "required": true,
          "description": "ID of the gateway",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update gateway",
        "description": "Update an existing gateway",
        "tags": ["Gateways"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatewayRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gateway updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gateway"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete gateway",
        "description": "Delete an existing gateway",
        "tags": ["Gateways"],
        "security": [{"ApiToken": []}],
        "responses": {
          "204": {
            "description": "Gateway deleted successfully"
          }
        }
      }
    },
    "/api/v1/chirpstack/device-profiles/": {
      "post": {
        "summary": "Create device profile",
        "description": "Create a new device profile",
        "tags": ["Device Profiles"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceProfileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Device profile created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceProfile"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chirpstack/device-profiles/{deviceProfileId}": {
      "parameters": [
        {
          "name": "deviceProfileId",
          "in": "path",
          "required": true,
          "description": "ID of the device profile",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update device profile",
        "description": "Update an existing device profile",
        "tags": ["Device Profiles"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceProfile"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete device profile",
        "description": "Delete an existing device profile",
        "tags": ["Device Profiles"],
        "security": [{"ApiToken": []}],
        "responses": {
          "204": {
            "description": "Device profile deleted successfully"
          }
        }
      }
    },
    "/api/v1/chirpstack/devices/": {
      "get": {
        "summary": "Get devices",
        "description": "Retrieve a list of all devices",
        "tags": ["Devices"],
        "security": [{"ApiToken": []}],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results to return",
            "schema": {
              "type": "integer",
              "example": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of devices retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create device",
        "description": "Create a new device",
        "tags": ["Devices"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Device created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chirpstack/devices/{deviceId}": {
      "parameters": [
        {
          "name": "deviceId",
          "in": "path",
          "required": true,
          "description": "ID of the device",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update device",
        "description": "Update an existing device",
        "tags": ["Devices"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete device",
        "description": "Delete an existing device",
        "tags": ["Devices"],
        "security": [{"ApiToken": []}],
        "responses": {
          "204": {
            "description": "Device deleted successfully"
          }
        }
      }
    },
    "/api/v1/chirpstack/devices/{deviceId}/activation/": {
      "parameters": [
        {
          "name": "deviceId",
          "in": "path",
          "required": true,
          "description": "ID of the device",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Activate device",
        "description": "Activate a device with ABP (Activation By Personalization)",
        "tags": ["Device Activation"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceActivationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device activated successfully"
          }
        }
      }
    },
    "/api/v1/pass/reset/": {
      "post": {
        "summary": "Request temporary password",
        "description": "Request a temporary password reset link via email",
        "tags": ["Password Management"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "example@email.com"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successfully"
          }
        }
      }
    },
    "/api/v1/pass/change/": {
      "post": {
        "summary": "Change password",
        "description": "Change user password using temporary password",
        "tags": ["Password Management"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "old_password": {
                    "type": "string",
                    "example": "tempPass"
                  },
                  "new_password": {
                    "type": "string",
                    "example": "nesPass"
                  }
                },
                "required": ["old_password", "new_password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          }
        }
      }
    },
    "/api/v1/Maquinas/": {
      "get": {
        "summary": "Get machines",
        "description": "Retrieve a list of all machines",
        "tags": ["Machines"],
        "security": [{"ApiToken": []}],
        "responses": {
          "200": {
            "description": "List of machines retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Machine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create machine",
        "description": "Create a new machine",
        "tags": ["Machines"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Machine created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Maquinas/{machineId}/": {
      "parameters": [
        {
          "name": "machineId",
          "in": "path",
          "required": true,
          "description": "ID of the machine",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update machine",
        "description": "Update an existing machine",
        "tags": ["Machines"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Machine updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Registro/": {
      "get": {
        "summary": "Get records",
        "description": "Retrieve a list of all records",
        "tags": ["Records"],
        "security": [{"ApiToken": []}],
        "responses": {
          "200": {
            "description": "List of records retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Record"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create record",
        "description": "Create a new record for a machine",
        "tags": ["Records"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Record"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Registro/{recordId}/": {
      "parameters": [
        {
          "name": "recordId",
          "in": "path",
          "required": true,
          "description": "ID of the record",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update record",
        "description": "Update an existing record",
        "tags": ["Records"],
        "security": [{"ApiToken": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Record"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Tenant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "can_have_gateways": {
            "type": "boolean"
          },
          "private_gateways_up": {
            "type": "boolean"
          },
          "private_gateways_down": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "max_device_count": {
            "type": "integer"
          },
          "max_gateway_count": {
            "type": "integer"
          }
        }
      },
      "TenantRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "TecnoBot"
          },
          "can_have_gateways": {
            "type": "boolean",
            "example": true
          },
          "private_gateways_up": {
            "type": "boolean",
            "example": true
          },
          "private_gateways_down": {
            "type": "boolean",
            "example": true
          },
          "description": {
            "type": "string"
          },
          "max_device_count": {
            "type": "integer",
            "example": 0
          },
          "max_gateway_count": {
            "type": "integer",
            "example": 0
          }
        },
        "required": ["name"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "is_superuser": {
            "type": "boolean"
          },
          "is_staff": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "tenant": {
            "type": "string"
          }
        }
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "123"
          },
          "is_superuser": {
            "type": "boolean",
            "example": false
          },
          "username": {
            "type": "string",
            "example": "Eder"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "is_staff": {
            "type": "boolean",
            "example": false
          },
          "is_active": {
            "type": "boolean",
            "example": true
          },
          "tenant": {
            "type": "string"
          }
        },
        "required": ["username", "password", "email"]
      },
      "Application": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenant_id": {
            "type": "string"
          }
        }
      },
      "ApplicationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "tenantId": {
            "type": "string"
          }
        },
        "required": ["name"]
      },
      "Gateway": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "stats_interval": {
            "type": "integer"
          },
          "tenant_id": {
            "type": "string"
          }
        }
      },
      "GatewayRequest": {
        "type": "object",
        "properties": {
          "gatewayId": {
            "type": "string",
            "example": "gatewayId"
          },
          "name": {
            "type": "string",
            "example": "string"
          },
          "description": {
            "type": "string",
            "example": "test"
          },
          "statsInterval": {
            "type": "integer",
            "example": 30
          },
          "tenantId": {
            "type": "string",
            "example": "tenantId"
          }
        },
        "required": ["gatewayId", "name", "tenantId"]
      },
      "DeviceProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "mac_version": {
            "type": "string"
          },
          "reg_params_revision": {
            "type": "string"
          },
          "supports_otaa": {
            "type": "boolean"
          },
          "tenant_id": {
            "type": "string"
          }
        }
      },
      "DeviceProfileRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "device-profile"
          },
          "region": {
            "type": "string",
            "example": "US915"
          },
          "macVersion": {
            "type": "string",
            "example": "LORAWAN_1_0_3"
          },
          "regParamRevision": {
            "type": "string",
            "example": "default"
          },
          "supportsOtaa": {
            "type": "boolean",
            "example": false
          },
          "abpRx1Delay": {
            "type": "integer",
            "example": 0
          },
          "abpRx1DrOffset": {
            "type": "integer",
            "example": 3
          },
          "abpRx2Dr": {
            "type": "integer",
            "example": 1
          },
          "abpRx2Freq": {
            "type": "integer",
            "example": 0
          },
          "supportsClassB": {
            "type": "boolean",
            "example": false
          },
          "supportsClassC": {
            "type": "boolean",
            "example": false
          },
          "payloadCodecRuntime": {
            "type": "string",
            "example": "NONE"
          },
          "isRlay": {
            "type": "boolean",
            "example": false
          },
          "isRlayEd": {
            "type": "boolean",
            "example": false
          },
          "uplink_interval": {
            "type": "string",
            "example": "30"
          },
          "tenantId": {
            "type": "string"
          }
        },
        "required": ["name", "region", "macVersion", "tenantId"]
      },
      "Device": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dev_eui": {
            "type": "string"
          },
          "device_profile_id": {
            "type": "string"
          },
          "is_disabled": {
            "type": "boolean"
          },
          "application_id": {
            "type": "string"
          }
        }
      },
      "DeviceRequest": {
        "type": "object",
        "properties": {
          "application_id": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "example": "Sensor"
          },
          "dev_eui": {
            "type": "string",
            "example": "deveui"
          },
          "device_profile_id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "example": "string"
          },
          "skip_fcnt_check": {
            "type": "boolean",
            "example": true
          },
          "is_disabled": {
            "type": "boolean",
            "example": false
          }
        },
        "required": ["application_id", "dev_eui", "device_profile_id", "name"]
      },
      "DeviceActivationRequest": {
        "type": "object",
        "properties": {
          "dev_addr": {
            "type": "string",
            "example": "string"
          },
          "app_s_key": {
            "type": "string",
            "example": "string"
          },
          "nwk_s_key": {
            "type": "string",
            "example": "string"
          },
          "fnwk_s_key": {
            "type": "string",
            "example": "string"
          },
          "snwk_s_key": {
            "type": "string",
            "example": "string"
          },
          "f_cnt_up": {
            "type": "integer",
            "example": 0
          },
          "a_f_cnt_down": {
            "type": "integer",
            "example": 0
          },
          "n_f_cnt_down": {
            "type": "integer",
            "example": 0
          }
        },
        "required": ["dev_addr", "app_s_key", "nwk_s_key"]
      },
      "Machine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "central": {
            "type": "integer"
          },
          "is_on": {
            "type": "boolean"
          },
          "predictivo": {
            "type": "boolean"
          },
          "gps": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "MachineRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "central": {
            "type": "integer",
            "example": 1
          },
          "is_on": {
            "type": "boolean",
            "example": false
          },
          "predictivo": {
            "type": "boolean",
            "example": false
          },
          "gps": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "example": [11.11, 11.11]
          }
        },
        "required": ["name", "central"]
      },
      "Record": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "machine": {
            "type": "integer"
          },
          "Pressure": {
            "type": "number"
          },
          "Current": {
            "type": "number"
          },
          "Temperature": {
            "type": "number"
          },
          "Voltage": {
            "type": "number"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RecordRequest": {
        "type": "object",
        "properties": {
          "machine": {
            "type": "integer",
            "example": 0
          },
          "Pressure": {
            "type": "number",
            "example": 0
          },
          "Current": {
            "type": "number",
            "example": 0
          },
          "Temperature": {
            "type": "number",
            "example": 0
          },
          "Voltage": {
            "type": "number",
            "example": 0
          }
        },
        "required": ["machine"]
      }
    },
    "securitySchemes": {
      "ApiToken": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}
