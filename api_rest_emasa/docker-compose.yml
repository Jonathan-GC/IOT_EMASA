version: '3.8'

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: dbsens
      POSTGRES_USER: miusuario
      POSTGRES_PASSWORD: admin
      POSTGRES_HOST_AUTH_METHOD: trust  # Temporal para configuración inicial Cambiar eso por md5 o sha-256 en producción.
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U miusuario -d dbsens"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - chirp-django-net

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: redis-server --requirepass redispass  # Contraseña Redis

  web:
    build: .
    command: bash -c "python manage.py migrate && python manage.py shell < init_superuser.py && daphne -b 0.0.0.0 -p 8000 drf.asgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://miusuario:admin@db:5432/dbsens
      EMAIL_HOST_USER: mario.bernalc@gmail.com 
      EMAIL_HOST_PASSWORD: hdnv mzqq bvxz kkne
      REDIS_URL: redis://:redispass@redis:6379/0
      POSTGRES_HOST_AUTH_METHOD: trust     #Cambiar eso por md5 o sha-256 
    networks:
      - chirp-django-net

volumes:
  postgres_data:
  redis_data:
  static_volume:

networks:
  chirp-django-net:
   external: true
